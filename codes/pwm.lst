   1              	gcc2_compiled.:
   2              	___gnu_compiled_cplusplus
   3              		stabs "/home/elex8030/jseo/tec/",100,0,0,Ltext0
   4              		stabs "pwm.cc",100,0,0,Ltext0
   5              	
   6              		section	.text
   7              	
   8              	Ltext0	stabs "int:t1=r1;-32768;32767;",128,0,0,0
   9              		stabs "char:t2=r2;0;255;",128,0,0,0
  10              		stabs "long int:t3=r1;0020000000000;0017777777777;",128,0,0,0
  11              		stabs "unsigned int:t4=r4;0;65535;",128,0,0,0
  12              		stabs "long unsigned int:t5=r1;0000000000000;0037777777777;",128,0,0,0
  13              		stabs "long long int:t6=r1;0020000000000;0017777777777;",128,0,0,0
  14              		stabs "long long unsigned int:t7=r1;0000000000000;0037777777777;",128,0,0,0
  15              		stabs "short int:t8=r8;-32768;32767;",128,0,0,0
  16              		stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0
  17              		stabs "signed char:t10=r10;-128;127;",128,0,0,0
  18              		stabs "unsigned char:t11=r11;0;255;",128,0,0,0
  19              		stabs "float:t12=r1;4;0;",128,0,0,0
  20              		stabs "double:t13=r1;4;0;",128,0,0,0
  21              		stabs "long double:t14=r1;4;0;",128,0,0,0
  22              		stabs "complex int:t15=s4real:1,0,16;imag:1,16,16;;",128,0,0,0
  23              		stabs "complex float:t16=r16;4;0;",128,0,0,0
  24              		stabs "complex double:t17=r17;4;0;",128,0,0,0
  25              		stabs "complex long double:t18=r18;4;0;",128,0,0,0
  26              		stabs "bool:t19=@s8;-16;",128,0,0,0
  27              		stabs "void:t20=20",128,0,0,0
  28              		stabs "__wchar_t:t21=r21;-32768;32767;",128,0,0,0
  29              		stabs "__vtbl_ptr_type:t22=*23=f1",128,0,0,0
  30              		stabs "GlobalMask:T24=s2prevState:/01,0,16;__as::25=##26=&24;:RC10GlobalMask;2A.;\\",128,0,0,0
  31              		stabs "GlobalMask::27=##28=*24;:RC10GlobalMask;2A.29=##28;:;2A.30=#24,20,28,1,20;:_$_10GlobalMask;
  32              		stabs "GlobalMask:Tt24",128,0,41,0
  33              		stabs "IoMask:t1",128,0,39,0
  34              		stabs "pwmreg:Tt31=u2byte:32=ar0;0;1;2,0,16;word:4,0,16;\\",128,0,0,0
  35              		stabs "__as::33=##34=&31;:RC6pwmreg;2A.;pwmreg::35=##36=*31;:RC6pwmreg;2A.37=##36;:;2A.;;",128,0,4
  36              		stabs "sciport:Tt38=s8scbd:1,0,16;sccr1:2,16,8;\\",128,0,0,0
  37              		stabs "loops:/21:loops;woms:/21:woms;rsrc:/21:rsrc;\\",128,0,0,0
  38              		stabs "m:/21:m;wake:/21:wake;ilt:/21:ilt;\\",128,0,0,0
  39              		stabs "pe:/21:pe;pt:/21:pt;sccr2:2,24,8;\\",128,0,0,0
  40              		stabs "tie:/21:tie;tcie:/21:tcie;rie:/21:rie;\\",128,0,0,0
  41              		stabs "ilie:/21:ilie;te:/21:te;re:/21:re;\\",128,0,0,0
  42              		stabs "rwu:/21:rwu;sbk:/21:sbk;scsr1:2,32,8;\\",128,0,0,0
  43              		stabs "tdre:/21:tdre;tc:/21:tc;rdrf:/21:rdrf;\\",128,0,0,0
  44              		stabs "idle:/21:idle;or:/21:or;nf:/21:nf;\\",128,0,0,0
  45              		stabs "fe:/21:fe;pf:/21:pf;scsr2:2,40,8;\\",128,0,0,0
  46              		stabs "raf:/21:raf;scdrh:2,48,8;r8:/21:r8;\\",128,0,0,0
  47              		stabs "t8:/21:t8;scdrl:2,56,8;__as::39=##40=&38;:RC7sciport;2A.;\\",128,0,0,0
  48              		stabs "sciport::41=##42=*38;:RC7sciport;2A.43=##42;:;2A.;;",128,0,637,0
  49              		stabs "spiport:Tt44=s6spcr1:2,0,8;spie:/21:spie;\\",128,0,0,0
  50              		stabs "spe:/21:spe;swom:/21:swom;mstr:/21:mstr;\\",128,0,0,0
  51              		stabs "cpol:/21:cpol;cpha:/21:cpha;ssoe:/21:ssoe;\\",128,0,0,0
  52              		stabs "lsbf:/21:lsbf;spcr2:2,8,8;pups:/21:pups;\\",128,0,0,0
  53              		stabs "rds:/21:rds;spc0:/21:spc0;spbr:2,16,8;\\",128,0,0,0
  54              		stabs "spr31:/21:spr31;spr62:/21:spr62;spr125:/21:spr125;\\",128,0,0,0
  55              		stabs "spr250:/21:spr250;spr500:/21:spr500;\\",128,0,0,0
  56              		stabs "spr1000:/21:spr1000;spr2000:/21:spr2000;\\",128,0,0,0
  57              		stabs "spr4000:/21:spr4000;spsr:2,24,8;spif:/21:spif;\\",128,0,0,0
  58              		stabs "wcol:/21:wcol;modf:/21:modf;rsvd4:2,32,8;\\",128,0,0,0
  59              		stabs "spdr:2,40,8;__as::45=##46=&44;:RC7spiport;2A.;spiport::47=##48=*44;:RC7spiport;2A.\\",128,0
  60              		stabs "49=##48;:;2A.;;",128,0,690,0
  61              		stabs "size_t:t4",128,0,5,0
  62              		stabs "uint16:t4",128,0,6,0
  63              		stabs "ulong32:t5",128,0,7,0
  64              		stabs "ptrdiff_t:t1",128,0,8,0
  65              		stabs "Isr:Tt50=s6ictlr:/051=&52=xsIctlr:,0,16;index:/04,16,16;\\",128,0,0,0
  66              		stabs "$vf50:53=*54=ar0;0;3;22,32;__as::55=##56=&50;:RC3Isr;2A.;Isr::57=##58=*50;:RC3Isr;2A.;\\",1
  67              		stabs "handler::59=##20;:;0A*2;50;;Isr::60=##58;:R5IctlrUi;1A.61=#50,20,58,1,20;:_$_3Isr;1A*3;50;;
  68              		stabs "Ictlr:Tt52=s6length:/04,0,16;isrTable:/062=*58,16,16;\\",128,0,0,0
  69              		stabs "$vf52:63=*64=ar0;0;2;22,32;__as::65=##51;:RC5Ictlr;2A.;Ictlr::66=##67=*52;:RC5Ictlr;2A.;\\"
  70              		stabs "runHandler::68=##20;:Ui;1A.;Ictlr::69=##67;:Ui;2A.70=#52,20,67,1,20;:_$_5Ictlr;2A*2;52;;\\"
  71              		stabs "attach::71=##20;:P3Isr;2A.;detach::71:P3Isr;2A.;;~%52;",128,0,41,0
  72              		stabs "Sources:t72=eisBdl:0,isAtd:1,isSc0:2,\\",128,0,0,0
  73              		stabs "isSpi:3,isPai:4,isPao:5,isTof:6,\\",128,0,0,0
  74              		stabs "isTc7:7,isTc6:8,isTc5:9,isTc4:10,\\",128,0,0,0
  75              		stabs "isTc3:11,isTc2:12,isTc1:13,isTc0:14,\\",128,0,0,0
  76              		stabs "isRti:15,isIrq:16,isNumSources:17,;",128,0,27,0
  77              		stabs "HC12Ictlr:Tt73=s6!1,020,52;theHC12Ictlr:/074=*73:_9HC12Ictlr$theHC12Ictlr;\\",128,0,0,0
  78              		stabs "__as::75=##76=&73;:RC9HC12Ictlr;2A.;HC12Ictlr::77=##74;:RC9HC12Ictlr;2A.;handlerTable::78=f
  79              		stabs "HC12Ictlr::79=##74;:;2A.80=#73,20,74,1,20;:_$_9HC12Ictlr;2A*2;52;;;~%52;",128,0,47,0
  80              		stabs "NoCopy:Tt81=s1NoCopy::82=##83=*81;:RC6NoCopy;0A.;__as::84=##85=&81;:RC6NoCopy;0A.;\\",128,0
  81              		stabs "NoCopy::86=##83;:;1A.87=#81,20,83,1,20;:_$_6NoCopy;1A.;;",128,0,15,0
  82              		stabs "Ovr:t88=edisable:0,drop:1,raise:2,;",128,0,87,0
  83              		stabs "OutputCompare:Tt89=s8tcr:/090=&4,0,16;mask:/04,16,16;\\",128,0,0,0
  84              		stabs "level:/04,32,16;mode:/04,48,16;__as::91=##92=&89;:RC13OutputCompare;2A.;\\",128,0,0,0
  85              		stabs "OutputCompare::93=##94=*89;:RC13OutputCompare;2A.95=##94;:ib;2A.96=#89,20,94,1,20;:_$_13Out
  86              		stabs "at::97=##4;:;2B.98=##20;:Ui;2A.;raiseAt::98:Ui;2A.;dropAt::98:Ui;2A.;high::99=##19;:;2A.;\\
  87              		stabs "override::100=##20;:Q213OutputCompare3Ovr;2A.;;",128,0,113,0
  88              		stabs "PwmDriver:Tt101=s27!2,020,50;0048,81;first:/0102=*103=xsPwmChannel:,56,16;\\",128,0,0,0
  89              		stabs "period:/04,72,16;ocTick:/089,88,64;ocOff:/089,152,64;\\",128,0,0,0
  90              		stabs "__as::104=##105=&101;:RC9PwmDriver;2A.;PwmDriver::106=##107=*101;:RC9PwmDriver;2A.\\",128,0
  91              		stabs "108=#101,20,107,1,20;:_$_9PwmDriver;2A*3;50;;attach::109=##20;:P10PwmChannel;0A.;\\",128,0,
  92              		stabs "handler::110=##20;:;0A*2;50;;PwmDriver::111=##107;:R5IctlrUi;2A.;;~%50;",128,0,33,0
  93              		stabs "PwmChannel:Tt103=s41!1,000,81;driver:/0105,8,16;\\",128,0,0,0
  94              		stabs "next:/0102,24,16;maxOnTime:/04,40,16;dutyCycle:/012,56,32;\\",128,0,0,0
  95              		stabs "direction:/01,88,16;onTime:/04,104,16;newOnTime:/04,120,16;\\",128,0,0,0
  96              		stabs "ocDir:/089,136,64;ocPwm:/089,200,64;ocBrk:/089,264,64;\\",128,0,0,0
  97              		stabs "__as::112=##113=&103;:RC10PwmChannel;2A.;PwmChannel::114=##102;:RC10PwmChannel;2A.\\",128,0
  98              		stabs "115=#103,20,102,1,20;:_$_10PwmChannel;2A.;handler::116=##20;:iUi;0A.;PwmChannel::117=##102;
  99              		stabs "setDuty::118=##20;:f;2A.;getDuty::119=##12;:;2B.;;",128,0,61,0
 100              		stabs "TestPin:Tt120=s5data:/0121=&2,0,16;dir:/0121,16,16;\\",128,0,0,0
 101              		stabs "mask:/02,32,8;__as::122=##123=&120;:RC7TestPin;2A.;TestPin::124=##125=*120;:RC7TestPin;2A.\
 102              		stabs "126=##125;:RVcT1c;2A.;raise::127=##20;:;2A.;lower::127:;2A.;;",128,0,30,0
 103              	
 104              		global	___9PwmDriverR5IctlrUi
 105              	___9PwmDriverR5IctlrUi
   1:pwm.cc        **** // $Id: pwm.cc,v 1.3 2004/10/25 20:26:58 querbach Exp $
   2:pwm.cc        **** 
   3:pwm.cc        **** // pwm.cc			   Copyright (C) 2003, Real-Time Systems Inc.
   4:pwm.cc        **** //-------------------------------------------- All Rights Reserved ----------
   5:pwm.cc        **** //
   6:pwm.cc        **** //	PWM Driver
   7:pwm.cc        **** //
   8:pwm.cc        **** //---------------------------------------------------------------------------
   9:pwm.cc        **** 
  10:pwm.cc        **** #include "globalmask.h"
  11:pwm.cc        **** #include "chipio.h"
  12:pwm.cc        **** #include "hc12ictlr.h"
  13:pwm.cc        **** #include "pwm.h"
  14:pwm.cc        **** #include "TestPin.h"
  15:pwm.cc        **** 
  16:pwm.cc        **** 
  17:pwm.cc        **** // The LMD18200 data sheet says that we must enforce a minimum delay between
  18:pwm.cc        **** // transitions on the PWM, DIR, and BRAKE lines
  19:pwm.cc        **** 
  20:pwm.cc        **** static const int transDelay = 8;	// minimum transition delay, tcnt's
  21:pwm.cc        **** 
  22:pwm.cc        **** 
  23:pwm.cc        **** //---------------------------------------------------------------------------
  24:pwm.cc        **** //
  25:pwm.cc        **** //	Pwm Driver Class
  26:pwm.cc        **** //
  27:pwm.cc        **** 
  28:pwm.cc        **** PwmDriver::PwmDriver(Ictlr& ic, unsigned per)
  29:pwm.cc        **** : Isr(ic, HC12Ictlr::isTc3),
 106              		stabd 68,0,29
 107 0000 1B93     		leas	-13,s
 108              	
 109 0002 6C8B     		std	11,s
 110 0004 EC8F     		ldd	15,s
 111 0006 6C80     		std	0,s
 112 0008 18008200 		movw	#11,2,s
 112      0B
 113 000d EC8B     		ldd	11,s
 114 000f 160000   		jsr	___3IsrR5IctlrUi
 115              		stabs "NoCopy.h",132,0,0,Ltext1
 116              	
   1:NoCopy.h      **** //Lab10
   2:NoCopy.h      **** //Jin Won Seo
   3:NoCopy.h      **** 
   4:NoCopy.h      **** #ifndef NOCOPY_H
   5:NoCopy.h      **** #define NOCOPY_H
   6:NoCopy.h      **** 
   7:NoCopy.h      **** class NoCopy
   8:NoCopy.h      **** {
   9:NoCopy.h      **** 	NoCopy(const NoCopy&);//ctor
  10:NoCopy.h      **** 	const NoCopy& operator = (const NoCopy&);//assignment operator
  11:NoCopy.h      **** 
  12:NoCopy.h      **** protected:
  13:NoCopy.h      **** 	NoCopy(){}
 117              	Ltext1	stabd 68,0,13
 118              	
 119              	LBB2
 120              	LBB3
 121              	LBE3
 122              	LBE2	stabs "pwm.cc",132,0,0,Ltext2
 123              	
  30:pwm.cc        ****   first(0),
  31:pwm.cc        ****   period(per),
  32:pwm.cc        ****   ocTick(3, true),
  33:pwm.cc        ****   ocOff(7)
  34:pwm.cc        **** {
 124              	Ltext2	stabd 68,0,34
 125 0012 CC000C   		ldd	#___vt_9PwmDriver
 126 0015 ED8B     		ldy	11,s
 127 0017 6C44     		std	4,y
 128 0019 87C7     		clrd	
 129 001b 6C47     		std	7,y
 130 001d ECF011   		ldd	17,s
 131 0020 6C49     		std	9,y
 132              		stabs "outputcompare.h",132,0,0,Ltext3
 133              	
   1:outputcompare.h **** // $Id: outputcompare.h,v 1.4 2004/11/01 20:30:25 querbach Exp $
   2:outputcompare.h **** 
   3:outputcompare.h **** // outputcompare.h		   Copyright (C) 2004, Real-Time Systems Inc.
   4:outputcompare.h **** //------------------------------------------- All Rights Reserved -----------
   5:outputcompare.h **** //
   6:outputcompare.h **** //	68HC12 Output Compare Timer Driver
   7:outputcompare.h **** //
   8:outputcompare.h **** //---------------------------------------------------------------------------
   9:outputcompare.h **** 
  10:outputcompare.h **** #ifndef OUTPUTCOMPARE_H
  11:outputcompare.h **** #define OUTPUTCOMPARE_H
  12:outputcompare.h **** 
  13:outputcompare.h **** #include "chipio.h"
  14:outputcompare.h **** 
  15:outputcompare.h **** 
  16:outputcompare.h **** class OutputCompare
  17:outputcompare.h **** {
  18:outputcompare.h ****   volatile unsigned int& tcr;	// compare register
  19:outputcompare.h ****   unsigned mask;		// interrupt mask
  20:outputcompare.h ****   unsigned level;		// output level mask
  21:outputcompare.h ****   unsigned mode;		// output mode mask
  22:outputcompare.h **** 
  23:outputcompare.h **** public:
  24:outputcompare.h ****   OutputCompare(int num, bool enable = false)
  25:outputcompare.h ****   : tcr((&tc0)[num]),
 134              	Ltext3	stabd 68,0,25
 135 0022 1A4B     		leax	11,y
 136              	
 137 0024 18000000 	LBB4	movw	#_tc0+6,0,x
 137      06
 138 0029 18000200 		movw	#8,2,x
 138      08
 139 002e 18000400 		movw	#64,4,x
 139      40
 140 0033 18000600 		movw	#128,6,x
 140      80
  26:outputcompare.h ****     mask(1 << num),
  27:outputcompare.h ****     level(ol << 2 * num),
  28:outputcompare.h ****     mode(om << 2 * num)
  29:outputcompare.h ****   {
 141              		stabd 68,0,29
 142              	
  30:outputcompare.h ****     tscr |= (ten | tffca);	// enable timer, clear flags fast
 143              	LBB5	stabd 68,0,30
 144 0038 F60000   		ldab	_tscr
 145 003b CA90     		orab	#144
 146 003d 7B0000   		stab	_tscr
  31:outputcompare.h **** 
  32:outputcompare.h ****     tcr = tcnt - 1;		// set safe value
 147              		stabd 68,0,32
 148 0040 ED00     		ldy	0,x
 149 0042 6D84     		sty	4,s
 150 0044 FC0000   		ldd	_tcnt
 151 0047 C3FFFF   		addd	#-1
 152 004a 6CF30004 		std	[4,s]
  33:outputcompare.h ****     tios |= mask;		// configure as compare timer
 153              		stabd 68,0,33
 154 004e F60000   		ldab	_tios
 155 0051 EA03     		orab	3,x
 156 0053 7B0000   		stab	_tios
  34:outputcompare.h **** 
  35:outputcompare.h ****     if (enable)
  36:outputcompare.h ****     {
  37:outputcompare.h ****       tflg1 = mask;		// clear request flip-flop
 157              		stabd 68,0,37
 158 0056 180D0300 		movb	3,x,_tflg1
 158      00
  38:outputcompare.h ****       tmsk1 |= mask;		// enable interrupt
 159              		stabd 68,0,38
 160 005b F60000   		ldab	_tmsk1
 161 005e EA03     		orab	3,x
 162 0060 7B0000   		stab	_tmsk1
 163              	
  39:outputcompare.h ****     }
  40:outputcompare.h ****   }
 164              	LBE5	stabd 68,0,40
 165              	
 166              	LBE4	stabd 68,0,25
 167 0063 ED8B     		ldy	11,s
 168 0065 19E813   		leay	19,y
 169 0068 6D84     		sty	4,s
 170              	
 171 006a CC000E   	LBB6	ldd	#_tc0+14
 172 006d 6CF30004 		std	[4,s]
 173 0071 CC0080   		ldd	#128
 174 0074 6C42     		std	2,y
 175 0076 CC4000   		ldd	#16384
 176 0079 6C44     		std	4,y
 177 007b CC8000   		ldd	#-32768
 178 007e 6C46     		std	6,y
 179              		stabd 68,0,29
 180              	
 181              	LBB7	stabd 68,0,30
 182 0080 F60000   		ldab	_tscr
 183 0083 CA90     		orab	#144
 184 0085 7B0000   		stab	_tscr
 185              		stabd 68,0,32
 186 0088 EDF30004 		ldy	[4,s]
 187 008c 6D89     		sty	9,s
 188 008e FC0000   		ldd	_tcnt
 189 0091 C3FFFF   		addd	#-1
 190 0094 6CF30009 		std	[9,s]
 191              		stabd 68,0,33
 192 0098 F60000   		ldab	_tios
 193 009b ED84     		ldy	4,s
 194 009d EA43     		orab	3,y
 195 009f 7B0000   		stab	_tios
 196              		stabd 68,0,38
 197              	
 198              	LBE7	stabd 68,0,40
 199              	
 200              	LBE6	stabs "pwm.cc",132,0,0,Ltext4
 201              	
 202              	Ltext4	stabd 68,0,34
 203              	
  35:pwm.cc        ****   ocTick.at(tcnt + period / 2);  
 204              	LBB8	stabd 68,0,35
 205 00a2 ECF011   		ldd	17,s
 206 00a5 49       		lsrd	
 207 00a6 6C86     		std	6,s
 208              		stabs "outputcompare.h",132,0,0,Ltext5
 209              	
  41:outputcompare.h **** 
  42:outputcompare.h ****   ~OutputCompare()
  43:outputcompare.h ****   {
  44:outputcompare.h ****     tmsk1 &= ~mask;
  45:outputcompare.h ****     tios &= ~mask;
  46:outputcompare.h **** 
  47:outputcompare.h ****     tctl1 &= ~(mode | level);
  48:outputcompare.h ****     oc7m &= ~mask;
  49:outputcompare.h ****     oc7d &= ~mask;
  50:outputcompare.h ****   }
  51:outputcompare.h **** 
  52:outputcompare.h ****   // Get time of last compare.
  53:outputcompare.h ****   
  54:outputcompare.h ****   unsigned at() const { return tcr; }
  55:outputcompare.h ****   
  56:outputcompare.h ****   // Set time of next compare.
  57:outputcompare.h ****     
  58:outputcompare.h ****   void at(unsigned time) { tcr = time; }
 210              	Ltext5	stabd 68,0,58
 211 00a8 FD0000   		ldy	_tcnt
 212 00ab B764     		tfr	y,d
 213 00ad E386     		addd	6,s
 214              	
 215              	LBB9
 216 00af EE00     	LBB10	ldx	0,x
 217 00b1 B746     		tfr	d,y
 218 00b3 6D00     		sty	0,x
 219              	
 220              	LBE10
 221              	LBE9	stabs "pwm.cc",132,0,0,Ltext6
 222              	
 223              	Ltext6	stabd 68,0,35
 224              	
 225 00b5 EC8B     	LBE8	ldd	11,s
  36:pwm.cc        **** }
 226              		stabd 68,0,36
 227              	
 228 00b7 1B8D     		leas	13,s
 229 00b9 3D       		rts
 230              	
 231              		stabs "__9PwmDriverR5IctlrUi:F107",36,0,29,___9PwmDriverR5IctlrUi
 232              		stabs "this:p107",160,0,29,11
 233              		stabs "ic:p51",160,0,29,15
 234              		stabs "per:p4",160,0,29,17
 235              		stabn 192,0,0,LBB2
 236              		stabn 192,0,0,LBB3
 237              		stabn 224,0,0,LBE3
 238              		stabn 224,0,0,LBE2
 239              		stabs "this:r94",64,0,34,2
 240              		stabn 192,0,0,LBB4
 241              		stabn 192,0,0,LBB5
 242              		stabn 224,0,0,LBE5
 243              		stabn 224,0,0,LBE4
 244              		stabs "this:94",128,0,34,4
 245              		stabn 192,0,0,LBB6
 246              		stabn 192,0,0,LBB7
 247              		stabn 224,0,0,LBE7
 248              		stabn 224,0,0,LBE6
 249              		stabn 192,0,0,LBB8
 250              		stabs "time:r4",64,0,35,1
 251              		stabn 192,0,0,LBB9
 252              		stabn 192,0,0,LBB10
 253              		stabn 224,0,0,LBE10
 254              		stabn 224,0,0,LBE9
 255              		stabn 224,0,0,LBE8
 256              	
 257              	Lscope0	stabs "",36,0,0,Lscope0-___9PwmDriverR5IctlrUi
 258              	
 259              		global	_attach__9PwmDriverP10PwmChannel
 260              	_attach__9PwmDriverP10PwmChannel
  37:pwm.cc        **** 
  38:pwm.cc        **** 
  39:pwm.cc        **** void PwmDriver::attach(PwmChannel* chan)
  40:pwm.cc        **** {
 261              		stabd 68,0,40
 262 00ba 1B9E     		leas	-2,s
 263              	
 264 00bc B745     		tfr	d,x
 265 00be ED84     		ldy	4,s
 266              	
 267              	LBB11	stabs "globalmask.h",132,0,0,Ltext7
 268              	
   1:globalmask.h  **** // $Id: globalmask.h,v 1.1 2004/10/04 19:35:44 querbach Exp $
   2:globalmask.h  **** 
   3:globalmask.h  **** // globalmask.h			   Copyright (C) 2002, Real-Time Systems Inc.
   4:globalmask.h  **** //-------------------------------------------- All Rights Reserved ----------
   5:globalmask.h  **** //
   6:globalmask.h  **** //	Global Interrupt Control
   7:globalmask.h  **** //
   8:globalmask.h  **** //	Creating an object of the GlobalMask class masks interrupts globally
   9:globalmask.h  **** //	as long as it exists.  When the object is destroyed, the previous
  10:globalmask.h  **** //	state of the global interrupt mask is restored.
  11:globalmask.h  **** //
  12:globalmask.h  **** //---------------------------------------------------------------------------
  13:globalmask.h  **** 
  14:globalmask.h  **** #ifndef GLOBALMASK_H
  15:globalmask.h  **** #define GLOBALMASK_H
  16:globalmask.h  **** 
  17:globalmask.h  **** 
  18:globalmask.h  **** class GlobalMask
  19:globalmask.h  **** {
  20:globalmask.h  ****   int prevState;	// interrupt mask state before creation of object
  21:globalmask.h  **** 
  22:globalmask.h  **** public:
  23:globalmask.h  ****   GlobalMask()		// mask interrupts
  24:globalmask.h  ****   {
 269              	Ltext7	stabd 68,0,24
 270              	
 271              	LBB12
  25:globalmask.h  ****     asm(" 
  26:globalmask.h  **** 	tfr	ccr,b		; get current state of mask
  27:globalmask.h  **** 	std	%0		; save it
  28:globalmask.h  **** 	sei			; mask interrupts globally
  29:globalmask.h  **** 	" : "=m" (prevState) : : "d"
  30:globalmask.h  ****     ); 
 272              	LBB13	stabd 68,0,30
 273              		 
 274 00c0 B721     		tfr	ccr,b		; get current state of mask
 275 00c2 6C80     		std	0,s		; save it
 276 00c4 1410     		sei			; mask interrupts globally
 277              		
 278              	
  31:globalmask.h  ****   }
 279              	LBE13	stabd 68,0,31
 280              	
 281              	LBE12	stabs "pwm.cc",132,0,0,Ltext8
 282              	
  41:pwm.cc        ****   GlobalMask mask;
  42:pwm.cc        **** 
  43:pwm.cc        ****   chan->next = first;
 283              	Ltext8	stabd 68,0,43
 284 00c6 18020743 		movw	7,x,3,y
  44:pwm.cc        ****   first = chan;
 285              		stabd 68,0,44
 286 00ca 6D07     		sty	7,x
 287              		stabs "globalmask.h",132,0,0,Ltext9
 288              	
  32:globalmask.h  ****   
  33:globalmask.h  ****   ~GlobalMask()		// restore interrupt mask
  34:globalmask.h  ****   {
 289              	Ltext9	stabd 68,0,34
 290              	
 291              	LBB14
  35:globalmask.h  ****     asm("
  36:globalmask.h  ****     	ldd	%0		; get previous state of mask
  37:globalmask.h  ****     	tfr	b,ccr		; restore it
  38:globalmask.h  ****     	" : : "m" (prevState) : "d"
  39:globalmask.h  ****     );
 292              	LBB15	stabd 68,0,39
 293              		
 294 00cc EC80     	    	ldd	0,s		; get previous state of mask
 295 00ce B712     	    	tfr	b,ccr		; restore it
 296              	    	
 297              	
  40:globalmask.h  ****   }
 298              	LBE15	stabd 68,0,40
 299              	
 300              	LBE14	stabs "pwm.cc",132,0,0,Ltext10
 301              	
  45:pwm.cc        **** }
 302              	Ltext10	stabd 68,0,45
 303              	
 304              	LBE11
 305 00d0 1B82     		leas	2,s
 306 00d2 3D       		rts
 307              	
 308              		stabs "attach__9PwmDriverP10PwmChannel:F20",36,0,40,_attach__9PwmDriverP10PwmChannel
 309              		stabs "this:P107",64,0,40,2
 310              		stabs "chan:p102",160,0,40,4
 311              		stabs "chan:r102",64,0,40,1
 312              		stabs "mask:r128=*24",64,0,41,3
 313              		stabn 192,0,0,LBB11
 314              		stabn 192,0,0,LBB12
 315              		stabn 192,0,0,LBB13
 316              		stabn 224,0,0,LBE13
 317              		stabn 224,0,0,LBE12
 318              		stabn 192,0,0,LBB14
 319              		stabn 192,0,0,LBB15
 320              		stabn 224,0,0,LBE15
 321              		stabn 224,0,0,LBE14
 322              		stabn 224,0,0,LBE11
 323              	
 324              	Lscope1	stabs "",36,0,0,Lscope1-_attach__9PwmDriverP10PwmChannel
 325              	
 326              		global	_handler__9PwmDriver
 327              	_handler__9PwmDriver
  46:pwm.cc        **** 
  47:pwm.cc        ****   
  48:pwm.cc        **** void PwmDriver::handler()
  49:pwm.cc        **** {
 328              		stabd 68,0,49
 329 00d3 1BF1EE   		leas	-18,s
 330              	
 331 00d6 6CF010   		std	16,s
 332              	
  50:pwm.cc        **** //	TestPin tp(portdlc, ddrdlc, 2);//for test
  51:pwm.cc        **** //	tp.raise();//for test
  52:pwm.cc        **** 	
  53:pwm.cc        **** 	bool phase = ocTick.high();
 333              	LBB16	stabd 68,0,53
 334              		stabs "outputcompare.h",132,0,0,Ltext11
 335              	
  59:outputcompare.h ****   
  60:outputcompare.h ****   // Raise output line at give time.
  61:outputcompare.h ****         
  62:outputcompare.h ****   void raiseAt(unsigned time)
  63:outputcompare.h ****   {
  64:outputcompare.h ****     tctl1 |= mode;
  65:outputcompare.h ****     tctl1 |= level;
  66:outputcompare.h ****     at(time);
  67:outputcompare.h ****   }  
  68:outputcompare.h ****   
  69:outputcompare.h ****   // Drop output line at given time.
  70:outputcompare.h ****       
  71:outputcompare.h ****   void dropAt(unsigned time)
  72:outputcompare.h ****   {
  73:outputcompare.h ****     tctl1 |= mode;
  74:outputcompare.h ****     tctl1 &= ~level;
  75:outputcompare.h ****     at(time);
  76:outputcompare.h ****   }  
  77:outputcompare.h **** 
  78:outputcompare.h ****   // After compare:  is output line high?
  79:outputcompare.h ****   
  80:outputcompare.h ****   bool high() { return (tctl1 & level) != 0; }
 336              	Ltext11	stabd 68,0,80
 337 00d9 B746     		tfr	d,y
 338 00db 1A4B     		leax	11,y
 339              	
 340              	LBB17
 341 00dd C7       	LBB18	clrb	
 342 00de 6B8E     		stab	14,s
 343 00e0 FD0000   		ldy	_tctl1
 344 00e3 B764     		tfr	y,d
 345 00e5 A404     		anda	0+4,x
 346 00e7 E405     		andb	1+4,x
 347 00e9 8C0000   		tstd	
 348 00ec 2704     		beq	L116
 349              		
 350 00ee C601     		ldab	#1
 351 00f0 6B8E     		stab	14,s
 352              	
 353 00f2 E68E     	L116	ldab	14,s
 354 00f4 6B8F     		stab	15,s
 355              	
 356              	LBE18
 357              	LBE17	stabs "pwm.cc",132,0,0,Ltext12
 358              	
  54:pwm.cc        **** 	if(phase == 1)
 359              	Ltext12	stabd 68,0,54
 360              	
 361 00f6 C101     	LBB19	cmpb	#1
 362 00f8 263C     		bne	L118
 363              		
  55:pwm.cc        **** 	{
 364              		stabd 68,0,55
 365              	
 366              	LBB20	stabs "outputcompare.h",132,0,0,Ltext13
 367              	
 368              	Ltext13	stabd 68,0,54
 369              	
 370              	LBB21
 371 00fa ED00     	LBB22	ldy	0,x
 372 00fc 6D84     		sty	4,s
 373 00fe EDF30004 		ldy	[4,s]
 374 0102 6D84     		sty	4,s
 375              	
 376              	LBE22
 377              	LBE21	stabs "pwm.cc",132,0,0,Ltext14
 378              	
  56:pwm.cc        **** 		ocTick.dropAt(ocTick.at() + period/2);//if phase=1 (high) then drop the pwm 
 379              	Ltext14	stabd 68,0,56
 380 0104 EDF010   		ldy	16,s
 381 0107 EC49     		ldd	9,y
 382 0109 49       		lsrd	
 383 010a 6C86     		std	6,s
 384              		stabs "outputcompare.h",132,0,0,Ltext15
 385              	
 386              	Ltext15	stabd 68,0,72
 387 010c EC84     		ldd	4,s
 388 010e E386     		addd	6,s
 389 0110 6C8C     		std	12,s
 390              	
 391              	LBB23
 392              	LBB24	stabd 68,0,73
 393 0112 FD0000   		ldy	_tctl1
 394 0115 B764     		tfr	y,d
 395 0117 AA06     		oraa	0+6,x
 396 0119 EA07     		orab	1+6,x
 397 011b 7C0000   		std	_tctl1
 398              		stabd 68,0,74
 399 011e EC04     		ldd	4,x
 400 0120 4151     		comd	
 401 0122 6C84     		std	4,s
 402 0124 FD0000   		ldy	_tctl1
 403 0127 B764     		tfr	y,d
 404 0129 A484     		anda	0+4,s
 405 012b E485     		andb	1+4,s
 406 012d 7C0000   		std	_tctl1
 407              		stabd 68,0,58
 408              	
 409              	LBB25
 410 0130 EE00     	LBB26	ldx	0,x
 411 0132 ED8C     		ldy	12,s
 412              	
 413              	LBE26
 414              	LBE25	stabd 68,0,75
 415              	
 416              	LBE24	stabd 68,0,76
 417              	
 418              	LBE23	stabs "pwm.cc",132,0,0,Ltext16
 419              	
 420              	Ltext16	stabd 68,0,56
 421              	
 422 0134 203F     	LBE20	bra	L133
 423              		
 424              	
  57:pwm.cc        **** 	}else
  58:pwm.cc        **** 	{
 425              	L118	stabd 68,0,58
 426              	
 427              	LBB27	stabs "outputcompare.h",132,0,0,Ltext17
 428              	
 429              	Ltext17	stabd 68,0,54
 430              	
 431              	LBB28
 432 0136 ED00     	LBB29	ldy	0,x
 433 0138 6D84     		sty	4,s
 434 013a ECF30004 		ldd	[4,s]
 435              	
 436              	LBE29
 437              	LBE28	stabd 68,0,58
 438 013e EDF010   		ldy	16,s
 439 0141 E349     		addd	9,y
 440              	
 441              	LBB30
 442 0143 EDE813   	LBB31	ldy	19,y
 443 0146 6D84     		sty	4,s
 444 0148 6CF30004 		std	[4,s]
 445              	
 446              	LBE31
 447              	LBE30	stabd 68,0,54
 448              	
 449              	LBB32
 450 014c ED00     	LBB33	ldy	0,x
 451 014e 6D84     		sty	4,s
 452 0150 EDF30004 		ldy	[4,s]
 453 0154 6D84     		sty	4,s
 454              	
 455              	LBE33
 456              	LBE32	stabs "pwm.cc",132,0,0,Ltext18
 457              	
  59:pwm.cc        **** 		ocOff.at(ocTick.at() + period);// ocOff turns on every T
  60:pwm.cc        **** 		ocTick.raiseAt(ocTick.at() + period/2);//if phase=0 (low) then raise the pwm 
 458              	Ltext18	stabd 68,0,60
 459 0156 EDF010   		ldy	16,s
 460 0159 EC49     		ldd	9,y
 461 015b 49       		lsrd	
 462              		stabs "outputcompare.h",132,0,0,Ltext19
 463              	
 464              	Ltext19	stabd 68,0,63
 465 015c ED84     		ldy	4,s
 466 015e 19EE     		leay	d,y
 467 0160 6D8A     		sty	10,s
 468              	
 469              	LBB34
 470              	LBB35	stabd 68,0,64
 471 0162 FC0000   		ldd	_tctl1
 472 0165 AA06     		oraa	0+6,x
 473 0167 EA07     		orab	1+6,x
 474              		stabd 68,0,65
 475 0169 7C0000   		std	_tctl1	; redundant load
 476 016c AA04     		oraa	0+4,x
 477 016e EA05     		orab	1+4,x
 478 0170 7C0000   		std	_tctl1
 479              		stabd 68,0,58
 480              	
 481              	LBB36
 482 0173 EE00     	LBB37	ldx	0,x
 483              	
 484 0175 6D00     	L133	sty	0,x
 485              	
 486              	LBE37
 487              	LBE36	stabd 68,0,66
 488              	
 489              	LBE35	stabd 68,0,67
 490              	
 491              	LBE34	stabs "pwm.cc",132,0,0,Ltext20
 492              	
 493              	Ltext20	stabd 68,0,60
 494              	
 495              	LBE27
  61:pwm.cc        **** 	}
  62:pwm.cc        **** 
  63:pwm.cc        **** 	for(PwmChannel* chan = first; chan ; chan = chan->next)
 496              	LBE19	stabd 68,0,63
 497              	
 498 0177 EDF010   	LBB38	ldy	16,s
 499 017a ED47     		ldy	7,y
 500              	
 501              	L134
 502 017c 6D88     	LBB39	sty	8,s	; redundant load
 503 017e 8D0000   		tsty	
 504 0181 2720     		beq	L129
 505              		
 506              		stabs "outputcompare.h",132,0,0,Ltext21
 507              	
 508              	Ltext21	stabd 68,0,54
 509              	
 510              	LBB40
 511 0183 EDF010   	LBB41	ldy	16,s
 512 0186 EEE813   		ldx	19,y
 513 0189 EC00     		ldd	0,x
 514 018b 6C86     		std	6,s
 515              	
 516              	LBE41
 517              	LBE40	stabs "pwm.cc",132,0,0,Ltext22
 518              	
  64:pwm.cc        **** 		chan->handler(phase, ocOff.at());
 519              	Ltext22	stabd 68,0,64
 520 018d E68F     		ldab	15,s
 521 018f 87       		clra	
 522 0190 B745     		tfr	d,x
 523 0192 6E80     		stx	0,s
 524 0194 ED86     		ldy	6,s
 525 0196 6D82     		sty	2,s
 526 0198 EC88     		ldd	8,s
 527 019a 160402   		jsr	_handler__10PwmChanneliUi
 528              	
 529 019d ED88     	LBE39	ldy	8,s
 530 019f ED43     		ldy	3,y
 531 01a1 20D9     		bra	L134
 532              		
 533              	
 534              	L129
 535              	LBE38
  65:pwm.cc        **** 	
  66:pwm.cc        **** //	tp.lower();//for test
  67:pwm.cc        **** }
 536              	LBE16	stabd 68,0,67
 537              	
 538 01a3 1BF012   		leas	18,s
 539 01a6 3D       		rts
 540              	
 541              		stabs "handler__9PwmDriver:F20",36,0,49,_handler__9PwmDriver
 542              		stabs "this:p107",160,0,49,16
 543              		stabs "phase:19",128,0,53,15
 544              		stabn 192,0,0,LBB16
 545              		stabs "this:r94",64,0,53,2
 546              		stabn 192,0,0,LBB17
 547              		stabn 192,0,0,LBB18
 548              		stabn 224,0,0,LBE18
 549              		stabn 224,0,0,LBE17
 550              		stabn 192,0,0,LBB19
 551              		stabn 192,0,0,LBB20
 552              		stabn 192,0,0,LBB21
 553              		stabn 192,0,0,LBB22
 554              		stabn 224,0,0,LBE22
 555              		stabn 224,0,0,LBE21
 556              		stabs "time:4",128,0,56,12
 557              		stabn 192,0,0,LBB23
 558              		stabn 192,0,0,LBB24
 559              		stabs "time:4",128,0,75,12
 560              		stabn 192,0,0,LBB25
 561              		stabn 192,0,0,LBB26
 562              		stabn 224,0,0,LBE26
 563              		stabn 224,0,0,LBE25
 564              		stabn 224,0,0,LBE24
 565              		stabn 224,0,0,LBE23
 566              		stabn 224,0,0,LBE20
 567              		stabn 192,0,0,LBB27
 568              		stabn 192,0,0,LBB28
 569              		stabn 192,0,0,LBB29
 570              		stabn 224,0,0,LBE29
 571              		stabn 224,0,0,LBE28
 572              		stabs "time:r4",64,0,59,0
 573              		stabn 192,0,0,LBB30
 574              		stabn 192,0,0,LBB31
 575              		stabn 224,0,0,LBE31
 576              		stabn 224,0,0,LBE30
 577              		stabn 192,0,0,LBB32
 578              		stabn 192,0,0,LBB33
 579              		stabn 224,0,0,LBE33
 580              		stabn 224,0,0,LBE32
 581              		stabs "time:4",128,0,60,10
 582              		stabn 192,0,0,LBB34
 583              		stabn 192,0,0,LBB35
 584              		stabs "time:4",128,0,66,10
 585              		stabn 192,0,0,LBB36
 586              		stabn 192,0,0,LBB37
 587              		stabn 224,0,0,LBE37
 588              		stabn 224,0,0,LBE36
 589              		stabn 224,0,0,LBE35
 590              		stabn 224,0,0,LBE34
 591              		stabn 224,0,0,LBE27
 592              		stabn 224,0,0,LBE19
 593              		stabs "chan:102",128,0,63,8
 594              		stabn 192,0,0,LBB38
 595              		stabn 192,0,0,LBB39
 596              		stabn 192,0,0,LBB40
 597              		stabn 192,0,0,LBB41
 598              		stabn 224,0,0,LBE41
 599              		stabn 224,0,0,LBE40
 600              		stabn 224,0,0,LBE39
 601              		stabn 224,0,0,LBE38
 602              		stabn 224,0,0,LBE16
 603              	
 604              	Lscope2	stabs "",36,0,0,Lscope2-_handler__9PwmDriver
 605              	
 606              		section	.const
 607              	
 608 0000 00000000 	LC0	float	0.000000e+00
 609              	
 610              		section	.text
 611              	
 612              		global	___10PwmChannelR9PwmDriveri
 613              	___10PwmChannelR9PwmDriveri
  68:pwm.cc        **** 
  69:pwm.cc        **** 
  70:pwm.cc        **** //---------------------------------------------------------------------------
  71:pwm.cc        **** //
  72:pwm.cc        **** //	Pwm Channel Class
  73:pwm.cc        **** //
  74:pwm.cc        **** 
  75:pwm.cc        **** PwmChannel::PwmChannel(PwmDriver& dr, int num)
  76:pwm.cc        **** : driver(dr),
 614              		stabd 68,0,76
 615 01a7 1BF1EF   		leas	-17,s
 616              	
 617 01aa 6C8D     		std	13,s
 618              		stabs "NoCopy.h",132,0,0,Ltext23
 619              	
 620              	Ltext23	stabd 68,0,13
 621              	
 622              	LBB42
 623              	LBB43
 624              	LBE43
 625              	LBE42	stabs "pwm.cc",132,0,0,Ltext24
 626              	
  77:pwm.cc        ****   next(0),  
  78:pwm.cc        **** 
  79:pwm.cc        ****   maxOnTime(driver.period - 4 * transDelay),
  80:pwm.cc        ****   dutyCycle(0),
  81:pwm.cc        ****   onTime(0),
  82:pwm.cc        ****   newOnTime(0),
  83:pwm.cc        **** 
  84:pwm.cc        ****   ocDir(num * 4 + 0),//OC0,4
  85:pwm.cc        ****   ocPwm(num * 4 + 1),//OC1,5
  86:pwm.cc        ****   ocBrk(num * 4 + 2)//OC2,6
  87:pwm.cc        **** {
 627              	Ltext24	stabd 68,0,87
 628 01ac ECF013   		ldd	19,s
 629 01af ED8D     		ldy	13,s
 630 01b1 6C41     		std	1,y
 631 01b3 87C7     		clrd	
 632 01b5 6C43     		std	3,y
 633 01b7 EE41     		ldx	1,y
 634 01b9 EE09     		ldx	9,x
 635 01bb 1AE1E0   		leax	-32,x
 636 01be 6E45     		stx	5,y
 637 01c0 FC0000   		ldd	LC0
 638 01c3 6C47     		std	7,y
 639 01c5 FC0002   		ldd	LC0+2
 640 01c8 6C49     		std	9,y
 641 01ca 87C7     		clrd	
 642 01cc 6C4D     		std	13,y
 643 01ce 6C4F     		std	15,y
 644              		stabs "outputcompare.h",132,0,0,Ltext25
 645              	
 646              	Ltext25	stabd 68,0,25
 647 01d0 1AE811   		leax	17,y
 648 01d3 ECF015   		ldd	21,s
 649 01d6 59       		asld	
 650 01d7 59       		asld	
 651 01d8 6C8B     		std	11,s
 652              	
 653 01da ECF015   	LBB44	ldd	21,s
 654 01dd 59       		asld	
 655 01de 59       		asld	
 656 01df 59       		asld	
 657 01e0 6C84     		std	4,s
 658 01e2 B746     		tfr	d,y
 659 01e4 19EA0000 		leay	_tc0,y
 660 01e8 6D82     		sty	2,s
 661 01ea 6D00     		sty	0,x
 662 01ec CC0001   		ldd	#1
 663 01ef ED8B     		ldy	11,s
 664 01f1 34       		pshx	
 665 01f2 B765     		tfr	y,x
 666 01f4 160000   		jsr	___hc12_ashlhi	 
 667 01f7 30       		pulx	
 668 01f8 6C02     		std	2,x
 669 01fa CC0001   		ldd	#1
 670 01fd ED84     		ldy	4,s
 671 01ff 34       		pshx	
 672 0200 B765     		tfr	y,x
 673 0202 160000   		jsr	___hc12_ashlhi	 
 674 0205 30       		pulx	
 675 0206 6C04     		std	4,x
 676 0208 CC0002   		ldd	#2
 677 020b 34       		pshx	
 678 020c B765     		tfr	y,x
 679 020e 160000   		jsr	___hc12_ashlhi	 
 680 0211 30       		pulx	
 681 0212 6C06     		std	6,x
 682              		stabd 68,0,29
 683              	
 684              	LBB45	stabd 68,0,30
 685 0214 F60000   		ldab	_tscr
 686 0217 CA90     		orab	#144
 687 0219 7B0000   		stab	_tscr
 688              		stabd 68,0,32
 689 021c ED00     		ldy	0,x
 690 021e 6D82     		sty	2,s
 691 0220 FC0000   		ldd	_tcnt
 692 0223 C3FFFF   		addd	#-1
 693 0226 6CF30002 		std	[2,s]
 694              		stabd 68,0,33
 695 022a F60000   		ldab	_tios
 696 022d EA03     		orab	3,x
 697 022f 7B0000   		stab	_tios
 698              		stabd 68,0,38
 699              	
 700              	LBE45	stabd 68,0,40
 701              	
 702              	LBE44	stabd 68,0,25
 703 0232 ED8D     		ldy	13,s
 704 0234 19E819   		leay	25,y
 705 0237 6D89     		sty	9,s
 706 0239 EE8B     		ldx	11,s
 707 023b 08       		inx	
 708              	
 709 023c B754     	LBB46	tfr	x,d
 710 023e 59       		asld	
 711 023f 6C84     		std	4,s
 712 0241 B746     		tfr	d,y
 713 0243 19EA0000 		leay	_tc0,y
 714 0247 6D82     		sty	2,s
 715 0249 6DF30009 		sty	[9,s]
 716 024d CC0001   		ldd	#1
 717 0250 34       		pshx	
 718 0251 B755     		tfr	x,x
 719 0253 160000   		jsr	___hc12_ashlhi	 
 720 0256 30       		pulx	
 721 0257 B745     		tfr	d,x
 722 0259 ED89     		ldy	9,s
 723 025b 6E42     		stx	2,y
 724 025d CC0001   		ldd	#1
 725 0260 ED84     		ldy	4,s
 726 0262 34       		pshx	
 727 0263 B765     		tfr	y,x
 728 0265 160000   		jsr	___hc12_ashlhi	 
 729 0268 30       		pulx	
 730 0269 B745     		tfr	d,x
 731 026b ED89     		ldy	9,s
 732 026d 6E44     		stx	4,y
 733 026f CC0002   		ldd	#2
 734 0272 ED84     		ldy	4,s
 735 0274 34       		pshx	
 736 0275 B765     		tfr	y,x
 737 0277 160000   		jsr	___hc12_ashlhi	 
 738 027a 30       		pulx	
 739 027b B745     		tfr	d,x
 740 027d ED89     		ldy	9,s
 741 027f 6E46     		stx	6,y
 742              		stabd 68,0,29
 743              	
 744              	LBB47	stabd 68,0,30
 745 0281 F60000   		ldab	_tscr
 746 0284 CA90     		orab	#144
 747 0286 7B0000   		stab	_tscr
 748              		stabd 68,0,32
 749 0289 EDF30009 		ldy	[9,s]
 750 028d 6D82     		sty	2,s
 751 028f FE0000   		ldx	_tcnt
 752 0292 09       		dex	
 753 0293 6EF30002 		stx	[2,s]
 754              		stabd 68,0,33
 755 0297 F60000   		ldab	_tios
 756 029a ED89     		ldy	9,s
 757 029c EA43     		orab	3,y
 758 029e 7B0000   		stab	_tios
 759              		stabd 68,0,38
 760              	
 761              	LBE47	stabd 68,0,40
 762              	
 763              	LBE46	stabd 68,0,25
 764 02a1 ED8D     		ldy	13,s
 765 02a3 1AE821   		leax	33,y
 766 02a6 EC8B     		ldd	11,s
 767 02a8 C30002   		addd	#2
 768 02ab 6C87     		std	7,s
 769              	
 770 02ad 59       	LBB48	asld	
 771 02ae 6C84     		std	4,s
 772 02b0 B746     		tfr	d,y
 773 02b2 19EA0000 		leay	_tc0,y
 774 02b6 6D82     		sty	2,s
 775 02b8 6D00     		sty	0,x
 776 02ba CC0001   		ldd	#1
 777 02bd ED87     		ldy	7,s
 778 02bf 34       		pshx	
 779 02c0 B765     		tfr	y,x
 780 02c2 160000   		jsr	___hc12_ashlhi	 
 781 02c5 30       		pulx	
 782 02c6 6C02     		std	2,x
 783 02c8 CC0001   		ldd	#1
 784 02cb ED84     		ldy	4,s
 785 02cd 34       		pshx	
 786 02ce B765     		tfr	y,x
 787 02d0 160000   		jsr	___hc12_ashlhi	 
 788 02d3 30       		pulx	
 789 02d4 6C04     		std	4,x
 790 02d6 CC0002   		ldd	#2
 791 02d9 34       		pshx	
 792 02da B765     		tfr	y,x
 793 02dc 160000   		jsr	___hc12_ashlhi	 
 794 02df 30       		pulx	
 795 02e0 6C06     		std	6,x
 796              		stabd 68,0,29
 797              	
 798              	LBB49	stabd 68,0,30
 799 02e2 F60000   		ldab	_tscr
 800 02e5 CA90     		orab	#144
 801 02e7 7B0000   		stab	_tscr
 802              		stabd 68,0,32
 803 02ea ED00     		ldy	0,x
 804 02ec 6D82     		sty	2,s
 805 02ee FC0000   		ldd	_tcnt
 806 02f1 C3FFFF   		addd	#-1
 807 02f4 6CF30002 		std	[2,s]
 808              		stabd 68,0,33
 809 02f8 F60000   		ldab	_tios
 810 02fb EA03     		orab	3,x
 811 02fd 7B0000   		stab	_tios
 812              		stabd 68,0,38
 813              	
 814              	LBE49	stabd 68,0,40
 815              	
 816              	LBE48	stabs "pwm.cc",132,0,0,Ltext26
 817              	
 818              	Ltext26	stabd 68,0,87
 819              	
 820              	LBB50	stabs "globalmask.h",132,0,0,Ltext27
 821              	
 822              	Ltext27	stabd 68,0,24
 823              	
 824              	LBB51
 825              	LBB52	stabd 68,0,25
 826              		stabd 68,0,30
 827              		 
 828 0300 B721     		tfr	ccr,b		; get current state of mask
 829 0302 6C8F     		std	15,s		; save it
 830 0304 1410     		sei			; mask interrupts globally
 831              		
 832              	
 833              	LBE52	stabd 68,0,31
 834              	
 835              	LBE51	stabs "outputcompare.h",132,0,0,Ltext28
 836              	
  81:outputcompare.h ****   
  82:outputcompare.h ****   
  83:outputcompare.h ****   // An event on oc7 can override the output state.
  84:outputcompare.h ****   
  85:outputcompare.h ****   enum Ovr
  86:outputcompare.h ****   {
  87:outputcompare.h ****     disable,		// disable 0c7 override
  88:outputcompare.h ****     drop,		// override with drop on oc7
  89:outputcompare.h ****     raise		// override with raise on oc7
  90:outputcompare.h ****   };
  91:outputcompare.h **** 
  92:outputcompare.h ****   // Override output state on oc7 compare.
  93:outputcompare.h ****     
  94:outputcompare.h ****   void override(Ovr ovr)
  95:outputcompare.h ****   {
 837              	Ltext28	stabd 68,0,95
 838              	
 839              	LBB53
  96:outputcompare.h ****     switch (ovr)
  97:outputcompare.h ****     {
  98:outputcompare.h ****       case disable:
  99:outputcompare.h ****         oc7m &= ~mask;
 100:outputcompare.h ****         break;
 101:outputcompare.h ****         
 102:outputcompare.h ****       case drop:
 103:outputcompare.h ****         oc7d &= ~mask;
 840              	LBB54	stabd 68,0,103
 841 0306 ED89     		ldy	9,s
 842 0308 E643     		ldab	3,y
 843 030a 51       		comb	
 844 030b 6B86     		stab	6,s
 845 030d F60000   		ldab	_oc7d
 846 0310 E486     		andb	6,s
 847 0312 7B0000   		stab	_oc7d
 104:outputcompare.h ****         oc7m |= mask;
 848              		stabd 68,0,104
 849 0315 F60000   		ldab	_oc7m
 850 0318 EA43     		orab	3,y
 851 031a 7B0000   		stab	_oc7m
 105:outputcompare.h ****         break;
 106:outputcompare.h ****         
 107:outputcompare.h ****       case raise:
 108:outputcompare.h ****         oc7d |= mask;
 109:outputcompare.h ****         oc7m |= mask;
 110:outputcompare.h ****         break;
 852              		stabd 68,0,110
 853              	
 111:outputcompare.h ****     }
 112:outputcompare.h ****   }
 854              	LBE54	stabd 68,0,112
 855              	
 856              	LBE53	stabs "pwm.cc",132,0,0,Ltext29
 857              	
  88:pwm.cc        ****   GlobalMask mask;
  89:pwm.cc        **** 
  90:pwm.cc        ****   // set up oc7 action for PWM output
  91:pwm.cc        **** 
  92:pwm.cc        ****   ocPwm.override(ocPwm.drop);
 858              	Ltext29	stabd 68,0,92
  93:pwm.cc        **** 
  94:pwm.cc        ****   // attach to channel list
  95:pwm.cc        **** 
  96:pwm.cc        ****   driver.attach(this);
 859              		stabd 68,0,96
 860 031d ED8D     		ldy	13,s
 861 031f EE41     		ldx	1,y
 862 0321 6D80     		sty	0,s
 863 0323 B754     		tfr	x,d
 864 0325 1600BA   		jsr	_attach__9PwmDriverP10PwmChannel
 865              		stabs "globalmask.h",132,0,0,Ltext30
 866              	
 867              	Ltext30	stabd 68,0,34
 868              	
 869              	LBB55
 870              	LBB56	stabd 68,0,35
 871              		stabd 68,0,39
 872              		
 873 0328 EC8F     	    	ldd	15,s		; get previous state of mask
 874 032a B712     	    	tfr	b,ccr		; restore it
 875              	    	
 876              	
 877              	LBE56	stabd 68,0,40
 878              	
 879              	LBE55	stabs "pwm.cc",132,0,0,Ltext31
 880              	
  97:pwm.cc        **** }
 881              	Ltext31	stabd 68,0,97
 882              	
 883 032c EC8D     	LBE50	ldd	13,s
 884              	
 885 032e 1BF011   		leas	17,s
 886 0331 3D       		rts
 887              	
 888              		stabs "__10PwmChannelR9PwmDriveri:F102",36,0,76,___10PwmChannelR9PwmDriveri
 889              		stabs "this:p102",160,0,76,13
 890              		stabs "dr:p105",160,0,76,19
 891              		stabs "num:p1",160,0,76,21
 892              		stabs "this:83",128,0,87,13
 893              		stabn 192,0,0,LBB42
 894              		stabn 192,0,0,LBB43
 895              		stabn 224,0,0,LBE43
 896              		stabn 224,0,0,LBE42
 897              		stabs "this:r94",64,0,87,2
 898              		stabs "num:1",128,0,87,11
 899              		stabn 192,0,0,LBB44
 900              		stabn 192,0,0,LBB45
 901              		stabn 224,0,0,LBE45
 902              		stabn 224,0,0,LBE44
 903              		stabs "this:94",128,0,87,9
 904              		stabs "num:r1",64,0,87,2
 905              		stabn 192,0,0,LBB46
 906              		stabn 192,0,0,LBB47
 907              		stabn 224,0,0,LBE47
 908              		stabn 224,0,0,LBE46
 909              		stabs "this:r94",64,0,87,2
 910              		stabs "num:1",128,0,87,7
 911              		stabn 192,0,0,LBB48
 912              		stabn 192,0,0,LBB49
 913              		stabn 224,0,0,LBE49
 914              		stabn 224,0,0,LBE48
 915              		stabs "mask:24",128,0,88,15
 916              		stabn 192,0,0,LBB50
 917              		stabn 192,0,0,LBB51
 918              		stabn 192,0,0,LBB52
 919              		stabn 224,0,0,LBE52
 920              		stabn 224,0,0,LBE51
 921              		stabn 192,0,0,LBB53
 922              		stabn 192,0,0,LBB54
 923              		stabn 224,0,0,LBE54
 924              		stabn 224,0,0,LBE53
 925              		stabn 192,0,0,LBB55
 926              		stabn 192,0,0,LBB56
 927              		stabn 224,0,0,LBE56
 928              		stabn 224,0,0,LBE55
 929              		stabn 224,0,0,LBE50
 930              	
 931              	Lscope3	stabs "",36,0,0,Lscope3-___10PwmChannelR9PwmDriveri
 932              	
 933              		section	.const
 934              	
 935 0004 3F800000 	LC1	float	1.000000e+00
 936              	
 937 0008 BF800000 	LC2	float	-1.000000e+00
 938              	
 939              		section	.text
 940              	
 941              		global	_setDuty__10PwmChannelf
 942              	_setDuty__10PwmChannelf
  98:pwm.cc        **** 
  99:pwm.cc        **** 
 100:pwm.cc        **** // Set duty cycle.
 101:pwm.cc        **** 
 102:pwm.cc        **** void PwmChannel::setDuty(float duty)
 103:pwm.cc        **** {
 943              		stabd 68,0,103
 944 0332 1BF1DA   		leas	-38,s
 945              	
 946 0335 B745     		tfr	d,x
 947 0337 ECF028   		ldd	40,s
 948 033a 6CF020   		std	32,s
 949 033d ECF02A   		ldd	42,s
 950 0340 6CF022   		std	34,s
 951              	
 104:pwm.cc        ****   duty = duty >  1.0 ?  1.0 
 105:pwm.cc        ****        : duty < -1.0 ? -1.0
 106:pwm.cc        ****        : duty;
 952              	LBB57	stabd 68,0,106
 953 0343 FC0004   		ldd	LC1
 954 0346 6CF018   		std	24,s
 955 0349 FC0006   		ldd	LC1+2
 956 034c 6CF01A   		std	26,s
 957 034f 160000   		jsr	___hc12_cmpsf	 
 958 0352 2018     		dc.b	32,24
 959 0354 2F0B     		ble	L163
 960              		
 961 0356 FC0004   		ldd	LC1
 962 0359 6CF01C   		std	28,s
 963 035c FC0006   		ldd	LC1+2
 964 035f 2027     		bra	L176
 965              		
 966              	
 967 0361 FC0008   	L163	ldd	LC2
 968 0364 6CF014   		std	20,s
 969 0367 FC000A   		ldd	LC2+2
 970 036a 6CF016   		std	22,s
 971 036d 160000   		jsr	___hc12_cmpsf	 
 972 0370 2014     		dc.b	32,20
 973 0372 2C0B     		bge	L165
 974              		
 975 0374 FC0008   		ldd	LC2
 976 0377 6CF01C   		std	28,s
 977 037a FC000A   		ldd	LC2+2
 978 037d 2009     		bra	L176
 979              		
 980              	
 981 037f ECF020   	L165	ldd	32,s
 982 0382 6CF01C   		std	28,s
 983 0385 ECF02A   		ldd	42,s
 984              	
 985 0388 6CF01E   	L176	std	30,s
 986 038b ECF01C   		ldd	28,s
 987 038e 6CF020   		std	32,s
 988 0391 ECF01E   		ldd	30,s
 989 0394 6CF022   		std	34,s
 107:pwm.cc        ****   dutyCycle = duty;		// for user interface
 990              		stabd 68,0,107
 991 0397 ECF020   		ldd	32,s
 992 039a 6C07     		std	7,x
 993 039c ECF01E   		ldd	30,s
 994 039f 6C09     		std	9,x
 108:pwm.cc        **** 
 109:pwm.cc        ****   // Calculate direction and on-time.
 110:pwm.cc        ****   
 111:pwm.cc        ****   int dir = duty >= 0 ? 1 : -1;
 995              		stabd 68,0,111
 996 03a1 CCFFFF   		ldd	#-1
 997 03a4 6CF012   		std	18,s
 998 03a7 160000   		jsr	___hc12_tstsf	 
 999 03aa 20       		dc.b	32
 1000 03ab 2D06     		blt	L167
 1001              		
 1002 03ad CC0001   		ldd	#1
 1003 03b0 6CF012   		std	18,s
 1004              	
 112:pwm.cc        ****   unsigned on = unsigned(driver.period * duty * dir);//t_on/T= duty, so t_on=duty*T
 1005              	L167	stabd 68,0,112
 1006 03b3 ED01     		ldy	1,x
 1007 03b5 ED49     		ldy	9,y
 1008 03b7 B764     		tfr	y,d
 1009 03b9 160000   		jsr	___hc12_floatunshisf	 
 1010 03bc 0E       		dc.b	14
 1011 03bd 160000   		jsr	___hc12_mulsf	 
 1012 03c0 0A0E20   		dc.b	10,14,32
 1013 03c3 ECF012   		ldd	18,s
 1014 03c6 160000   		jsr	___hc12_floathisf	 
 1015 03c9 06       		dc.b	6
 1016 03ca 160000   		jsr	___hc12_mulsf	 
 1017 03cd 020A06   		dc.b	2,10,6
 1018 03d0 160000   		jsr	___hc12_fixuns_truncsfhi	 
 1019 03d3 02       		dc.b	2
 1020 03d4 6C80     		std	0,s
 113:pwm.cc        ****   on = on < maxOnTime ? on : maxOnTime;
 1021              		stabd 68,0,113
 1022 03d6 ED05     		ldy	5,x
 1023 03d8 AD80     		cpy	0,s
 1024 03da 2302     		bls	L169
 1025              		
 1026 03dc B746     		tfr	d,y
 1027              	
 1028              	L169	stabs "globalmask.h",132,0,0,Ltext32
 1029              	
 1030              	Ltext32	stabd 68,0,24
 1031              	
 1032              	LBB58
 1033              	LBB59	stabd 68,0,30
 1034              		 
 1035 03de B721     		tfr	ccr,b		; get current state of mask
 1036 03e0 6CF024   		std	36,s		; save it
 1037 03e3 1410     		sei			; mask interrupts globally
 1038              		
 1039              	
 1040              	LBE59	stabd 68,0,31
 1041              	
 1042              	LBE58	stabs "pwm.cc",132,0,0,Ltext33
 1043              	
 114:pwm.cc        **** 
 115:pwm.cc        ****   // Store direction and on-time synchronously for pickup by handler().
 116:pwm.cc        ****   
 117:pwm.cc        ****   GlobalMask mask;
 118:pwm.cc        **** 
 119:pwm.cc        ****   direction = dir;
 1044              	Ltext33	stabd 68,0,119
 1045 03e5 ECF012   		ldd	18,s
 1046 03e8 6C0B     		std	11,x
 120:pwm.cc        ****   newOnTime = on;
 1047              		stabd 68,0,120
 1048 03ea 6D0F     		sty	15,x
 1049              		stabs "globalmask.h",132,0,0,Ltext34
 1050              	
 1051              	Ltext34	stabd 68,0,34
 1052              	
 1053              	LBB60
 1054              	LBB61	stabd 68,0,39
 1055              		
 1056 03ec ECF024   	    	ldd	36,s		; get previous state of mask
 1057 03ef B712     	    	tfr	b,ccr		; restore it
 1058              	    	
 1059              	
 1060              	LBE61	stabd 68,0,40
 1061              	
 1062              	LBE60	stabs "pwm.cc",132,0,0,Ltext35
 1063              	
 121:pwm.cc        **** }
 1064              	Ltext35	stabd 68,0,121
 1065              	
 1066              	LBE57
 1067 03f1 1BF026   		leas	38,s
 1068 03f4 3D       		rts
 1069              	
 1070              		stabs "setDuty__10PwmChannelf:F20",36,0,103,_setDuty__10PwmChannelf
 1071              		stabs "this:P102",64,0,103,2
 1072              		stabs "duty:p12",160,0,103,40
 1073              		stabs "duty:12",128,0,103,32
 1074              		stabs "dir:1",128,0,111,18
 1075              		stabs "on:r129=*4",64,0,112,3
 1076              		stabs "mask:24",128,0,117,36
 1077              		stabn 192,0,0,LBB57
 1078              		stabn 192,0,0,LBB58
 1079              		stabn 192,0,0,LBB59
 1080              		stabn 224,0,0,LBE59
 1081              		stabn 224,0,0,LBE58
 1082              		stabn 192,0,0,LBB60
 1083              		stabn 192,0,0,LBB61
 1084              		stabn 224,0,0,LBE61
 1085              		stabn 224,0,0,LBE60
 1086              		stabn 224,0,0,LBE57
 1087              	
 1088              	Lscope4	stabs "",36,0,0,Lscope4-_setDuty__10PwmChannelf
 1089              	
 1090              		global	_getDuty__C10PwmChannel
 1091              	_getDuty__C10PwmChannel
 122:pwm.cc        ****   
 123:pwm.cc        **** 
 124:pwm.cc        **** // Get actual duty cycle being used.
 125:pwm.cc        **** 
 126:pwm.cc        **** float PwmChannel::getDuty() const
 127:pwm.cc        **** {
 1092              		stabd 68,0,127
 1093              	
 1094 03f5 B745     		tfr	d,x
 1095 03f7 ED82     		ldy	2,s
 1096              	
 128:pwm.cc        ****   return dutyCycle;
 1097              	LBB62	stabd 68,0,128
 1098 03f9 18024700 		movw	7,y,0,x
 1099 03fd 18024902 		movw	9,y,2,x
 1100              	
 129:pwm.cc        **** }
 1101              	LBE62	stabd 68,0,129
 1102              	
 1103 0401 3D       		rts
 1104              	
 1105              		stabs "getDuty__C10PwmChannel:F12",36,0,127,_getDuty__C10PwmChannel
 1106              		stabs "this:p130=*103",160,0,127,2
 1107              		stabs "this:r130",64,0,127,1
 1108              		stabn 192,0,0,LBB62
 1109              		stabn 224,0,0,LBE62
 1110              	
 1111              	Lscope5	stabs "",36,0,0,Lscope5-_getDuty__C10PwmChannel
 1112              	
 1113              		global	_handler__10PwmChanneliUi
 1114              	_handler__10PwmChanneliUi
 130:pwm.cc        **** 
 131:pwm.cc        **** 
 132:pwm.cc        **** // Set direction line and time that PWM output rises.
 133:pwm.cc        **** //phase: 1(high) 0(low), nextCycle: last offTime of OC7
 134:pwm.cc        **** void PwmChannel::handler(int phase, unsigned nextCycle)
 135:pwm.cc        **** {
 1115              		stabd 68,0,135
 1116 0402 1B96     		leas	-10,s
 1117              	
 1118 0404 6C88     		std	8,s
 1119              	
 136:pwm.cc        **** 	unsigned period = driver.period;
 1120              	LBB63	stabd 68,0,136
 1121 0406 B746     		tfr	d,y
 1122 0408 EE41     		ldx	1,y
 1123 040a EC09     		ldd	9,x
 1124 040c 6C86     		std	6,s
 137:pwm.cc        **** 	if(phase == 1)
 1125              		stabd 68,0,137
 1126              	
 1127 040e ED8C     	LBB64	ldy	12,s
 1128 0410 8D0001   		cpy	#1
 1129 0413 18260095 		lbne	L179
 1130              		
 138:pwm.cc        **** 	{
 1131              		stabd 68,0,138
 1132              	
 139:pwm.cc        **** 		onTime = newOnTime;//sync ontime
 1133              	LBB65	stabd 68,0,139
 1134 0417 ED88     		ldy	8,s
 1135 0419 EC4F     		ldd	15,y
 1136 041b 6C4D     		std	13,y
 140:pwm.cc        **** 		//direction of current of H-bridge		
 141:pwm.cc        **** 		if(direction >= 0)
 1137              		stabd 68,0,141
 1138              	
 1139 041d EE4B     	LBB66	ldx	11,y
 1140 041f 2D28     		blt	L180
 1141              		
 142:pwm.cc        **** 			ocDir.raiseAt(nextCycle + transDelay);//raise if phase and direction is 1
 1142              		stabd 68,0,142
 1143              	
 1144              	LBB67	stabs "outputcompare.h",132,0,0,Ltext36
 1145              	
 1146              	Ltext36	stabd 68,0,63
 1147 0421 19E811   		leay	17,y
 1148 0424 6D80     		sty	0,s
 1149 0426 ED8E     		ldy	14,s
 1150 0428 1A48     		leax	8,y
 1151              	
 1152              	LBB68
 1153              	LBB69	stabd 68,0,64
 1154 042a FC0000   		ldd	_tctl1
 1155 042d ED80     		ldy	0,s
 1156 042f AA46     		oraa	0+6,y
 1157 0431 EA47     		orab	1+6,y
 1158              		stabd 68,0,65
 1159 0433 7C0000   		std	_tctl1	; redundant load
 1160 0436 AA44     		oraa	0+4,y
 1161 0438 EA45     		orab	1+4,y
 1162 043a 7C0000   		std	_tctl1
 1163              		stabd 68,0,58
 1164              	
 1165              	LBB70
 1166 043d EDF30000 	LBB71	ldy	[0,s]
 1167 0441 6D80     		sty	0,s
 1168 0443 6EF30000 		stx	[0,s]
 1169              	
 1170              	LBE71
 1171              	LBE70	stabd 68,0,66
 1172              	
 1173              	LBE69	stabd 68,0,67
 1174              	
 1175              	LBE68	stabs "pwm.cc",132,0,0,Ltext37
 1176              	
 1177              	Ltext37	stabd 68,0,142
 1178              	
 1179 0447 203A     	LBE67	bra	L183
 1180              		
 1181              	
 143:pwm.cc        **** 		else
 144:pwm.cc        **** 			ocDir.dropAt(nextCycle + transDelay);//drop if phase =1 but direction is not 1
 1182              	L180	stabd 68,0,144
 1183              	
 1184              	LBB72	stabs "outputcompare.h",132,0,0,Ltext38
 1185              	
 1186              	Ltext38	stabd 68,0,72
 1187 0449 ED88     		ldy	8,s
 1188 044b 19E811   		leay	17,y
 1189 044e 6D80     		sty	0,s
 1190 0450 ED8E     		ldy	14,s
 1191 0452 1948     		leay	8,y
 1192 0454 6D84     		sty	4,s
 1193              	
 1194              	LBB73
 1195              	LBB74	stabd 68,0,73
 1196 0456 FE0000   		ldx	_tctl1
 1197 0459 B754     		tfr	x,d
 1198 045b ED80     		ldy	0,s
 1199 045d AA46     		oraa	0+6,y
 1200 045f EA47     		orab	1+6,y
 1201 0461 B745     		tfr	d,x
 1202 0463 7E0000   		stx	_tctl1
 1203              		stabd 68,0,74
 1204 0466 EC44     		ldd	4,y
 1205 0468 4151     		comd	
 1206 046a B745     		tfr	d,x
 1207 046c FD0000   		ldy	_tctl1
 1208 046f B764     		tfr	y,d
 1209 0471 34       		pshx	
 1210 0472 A4B0     		anda	1,s+
 1211 0474 E4B0     		andb	1,s+
 1212 0476 B745     		tfr	d,x
 1213 0478 7E0000   		stx	_tctl1
 1214              		stabd 68,0,58
 1215              	
 1216              	LBB75
 1217 047b EEF30000 	LBB76	ldx	[0,s]
 1218 047f ED84     		ldy	4,s
 1219 0481 6D00     		sty	0,x
 1220              	
 1221              	LBE76
 1222              	LBE75	stabd 68,0,75
 1223              	
 1224              	LBE74	stabd 68,0,76
 1225              	
 1226              	LBE73	stabs "pwm.cc",132,0,0,Ltext39
 1227              	
 1228              	Ltext39	stabd 68,0,144
 1229              	
 1230              	LBE72
 1231              	L183
 145:pwm.cc        **** 		if(onTime >= period/2)
 1232              	LBE66	stabd 68,0,145
 1233              	
 1234 0483 EC86     	LBB77	ldd	6,s
 1235 0485 49       		lsrd	
 1236 0486 ED88     		ldy	8,s
 1237 0488 EE4D     		ldx	13,y
 1238 048a 3B       		pshd	
 1239 048b AEB1     		cpx	2,s+
 1240 048d 18250082 		lblo	L189
 1241              		
 146:pwm.cc        **** 			ocPwm.raiseAt(nextCycle + period - onTime);
 1242              		stabd 68,0,146
 1243              	
 1244 0491 EC8E     	LBB78	ldd	14,s
 1245 0493 E386     		addd	6,s
 1246 0495 34       		pshx	
 1247 0496 A3B1     		subd	2,s+
 1248 0498 B745     		tfr	d,x
 1249              		stabs "outputcompare.h",132,0,0,Ltext40
 1250              	
 1251              	Ltext40	stabd 68,0,63
 1252 049a 19E819   		leay	25,y
 1253 049d 6D80     		sty	0,s
 1254              	
 1255              	LBB79
 1256              	LBB80	stabd 68,0,64
 1257 049f FC0000   		ldd	_tctl1
 1258 04a2 AA46     		oraa	0+6,y
 1259 04a4 EA47     		orab	1+6,y
 1260 04a6 7C0000   		std	_tctl1	; redundant load
 1261              		stabd 68,0,58
 1262              	
 1263              	LBB81
 1264              	LBB82
 1265              	LBE82
 1266              	LBE81	stabd 68,0,66
 1267              	
 1268              	LBE80	stabd 68,0,67
 1269              	
 1270              	LBE79	stabs "pwm.cc",132,0,0,Ltext41
 1271              	
 1272              	Ltext41	stabd 68,0,146
 1273              	
 1274              	LBE78
 1275              	LBE77
 1276 04a9 060502   	LBE65	jmp	L195
 1277              		
 1278              	
 147:pwm.cc        **** 	}else
 148:pwm.cc        **** 	{
 1279              	L179	stabd 68,0,148
 1280              	
 1281              	LBB83	stabs "outputcompare.h",132,0,0,Ltext42
 1282              	
 1283              	Ltext42	stabd 68,0,63
 1284 04ac ED88     		ldy	8,s
 1285 04ae 19E821   		leay	33,y
 1286 04b1 6D80     		sty	0,s
 1287 04b3 ED8E     		ldy	14,s
 1288 04b5 EC86     		ldd	6,s
 1289 04b7 1AEE     		leax	d,y
 1290              	
 1291              	LBB84
 1292              	LBB85	stabd 68,0,64
 1293 04b9 FC0000   		ldd	_tctl1
 1294 04bc ED80     		ldy	0,s
 1295 04be AA46     		oraa	0+6,y
 1296 04c0 EA47     		orab	1+6,y
 1297              		stabd 68,0,65
 1298 04c2 7C0000   		std	_tctl1	; redundant load
 1299 04c5 AA44     		oraa	0+4,y
 1300 04c7 EA45     		orab	1+4,y
 1301 04c9 7C0000   		std	_tctl1
 1302              		stabd 68,0,58
 1303              	
 1304              	LBB86
 1305 04cc EDF30000 	LBB87	ldy	[0,s]
 1306 04d0 6D80     		sty	0,s
 1307 04d2 6EF30000 		stx	[0,s]
 1308              	
 1309              	LBE87
 1310              	LBE86	stabd 68,0,66
 1311              	
 1312              	LBE85	stabd 68,0,67
 1313              	
 1314              	LBE84	stabs "pwm.cc",132,0,0,Ltext43
 1315              	
 149:pwm.cc        **** 		ocBrk.raiseAt(nextCycle + period);
 150:pwm.cc        **** 		if(onTime < period/2)
 1316              	Ltext43	stabd 68,0,150
 1317              	
 1318 04d6 EC86     	LBB88	ldd	6,s
 1319 04d8 49       		lsrd	
 1320 04d9 6C80     		std	0,s
 1321 04db ED88     		ldy	8,s
 1322 04dd EE4D     		ldx	13,y
 1323 04df AE80     		cpx	0,s
 1324 04e1 2430     		bhs	L189
 1325              		
 151:pwm.cc        **** 			ocPwm.raiseAt(nextCycle - onTime);		
 1326              		stabd 68,0,151
 1327              	
 1328 04e3 EC8E     	LBB89	ldd	14,s
 1329 04e5 34       		pshx	
 1330 04e6 A3B1     		subd	2,s+
 1331 04e8 B745     		tfr	d,x
 1332              		stabs "outputcompare.h",132,0,0,Ltext44
 1333              	
 1334              	Ltext44	stabd 68,0,63
 1335 04ea 19E819   		leay	25,y
 1336 04ed 6D80     		sty	0,s
 1337              	
 1338              	LBB90
 1339              	LBB91	stabd 68,0,64
 1340 04ef FC0000   		ldd	_tctl1
 1341 04f2 AA46     		oraa	0+6,y
 1342 04f4 EA47     		orab	1+6,y
 1343 04f6 7C0000   		std	_tctl1
 1344              		stabd 68,0,65
 1345 04f9 FD0000   		ldy	_tctl1
 1346 04fc 6D82     		sty	2,s
 1347 04fe B764     		tfr	y,d
 1348 0500 ED80     		ldy	0,s
 1349              	
 1350 0502 AA44     	L195	oraa	0+4,y
 1351 0504 EA45     		orab	1+4,y
 1352 0506 7C0000   		std	_tctl1
 1353              		stabd 68,0,58
 1354              	
 1355              	LBB92
 1356 0509 EDF30000 	LBB93	ldy	[0,s]
 1357 050d 6D80     		sty	0,s
 1358 050f 6EF30000 		stx	[0,s]
 1359              	
 1360              	LBE93
 1361              	LBE92	stabd 68,0,66
 1362              	
 1363              	LBE91	stabd 68,0,67
 1364              	
 1365              	LBE90	stabs "pwm.cc",132,0,0,Ltext45
 1366              	
 1367              	Ltext45	stabd 68,0,151
 1368              	
 1369              	LBE89
 1370              	LBE88
 1371              	LBE83
 1372              	L189
 1373              	LBE64
 152:pwm.cc        **** 	}
 153:pwm.cc        **** 
 154:pwm.cc        **** }
 1374              	LBE63	stabd 68,0,154
 1375              	
 1376 0513 1B8A     		leas	10,s
 1377 0515 3D       		rts
 1378              	
 1379              		stabs "handler__10PwmChanneliUi:F20",36,0,135,_handler__10PwmChanneliUi
 1380              		stabs "this:p102",160,0,135,8
 1381              		stabs "phase:p1",160,0,135,12
 1382              		stabs "nextCycle:p4",160,0,135,14
 1383              		stabs "period:4",128,0,136,6
 1384              		stabn 192,0,0,LBB63
 1385              		stabn 192,0,0,LBB64
 1386              		stabn 192,0,0,LBB65
 1387              		stabn 192,0,0,LBB66
 1388              		stabn 192,0,0,LBB67
 1389              		stabs "this:r131=*94",64,0,142,3
 1390              		stabs "time:r4",64,0,142,2
 1391              		stabn 192,0,0,LBB68
 1392              		stabn 192,0,0,LBB69
 1393              		stabs "time:r4",64,0,66,2
 1394              		stabs "this:r132=*94",64,0,66,3
 1395              		stabn 192,0,0,LBB70
 1396              		stabn 192,0,0,LBB71
 1397              		stabn 224,0,0,LBE71
 1398              		stabn 224,0,0,LBE70
 1399              		stabn 224,0,0,LBE69
 1400              		stabn 224,0,0,LBE68
 1401              		stabn 224,0,0,LBE67
 1402              		stabn 192,0,0,LBB72
 1403              		stabs "this:r133=*94",64,0,144,3
 1404              		stabs "time:4",128,0,144,4
 1405              		stabn 192,0,0,LBB73
 1406              		stabn 192,0,0,LBB74
 1407              		stabs "time:4",128,0,75,4
 1408              		stabs "this:r134=*94",64,0,75,3
 1409              		stabn 192,0,0,LBB75
 1410              		stabn 192,0,0,LBB76
 1411              		stabn 224,0,0,LBE76
 1412              		stabn 224,0,0,LBE75
 1413              		stabn 224,0,0,LBE74
 1414              		stabn 224,0,0,LBE73
 1415              		stabn 224,0,0,LBE72
 1416              		stabn 224,0,0,LBE66
 1417              		stabn 192,0,0,LBB77
 1418              		stabn 192,0,0,LBB78
 1419              		stabs "this:r135=*94",64,0,146,3
 1420              		stabn 192,0,0,LBB79
 1421              		stabn 192,0,0,LBB80
 1422              		stabs "this:r136=*94",64,0,66,3
 1423              		stabn 192,0,0,LBB81
 1424              		stabn 192,0,0,LBB82
 1425              		stabn 224,0,0,LBE82
 1426              		stabn 224,0,0,LBE81
 1427              		stabn 224,0,0,LBE80
 1428              		stabn 224,0,0,LBE79
 1429              		stabn 224,0,0,LBE78
 1430              		stabn 224,0,0,LBE77
 1431              		stabn 224,0,0,LBE65
 1432              		stabn 192,0,0,LBB83
 1433              		stabs "this:r137=*94",64,0,149,3
 1434              		stabs "time:r4",64,0,149,2
 1435              		stabn 192,0,0,LBB84
 1436              		stabn 192,0,0,LBB85
 1437              		stabs "time:r4",64,0,66,2
 1438              		stabs "this:r138=*94",64,0,66,3
 1439              		stabn 192,0,0,LBB86
 1440              		stabn 192,0,0,LBB87
 1441              		stabn 224,0,0,LBE87
 1442              		stabn 224,0,0,LBE86
 1443              		stabn 224,0,0,LBE85
 1444              		stabn 224,0,0,LBE84
 1445              		stabn 192,0,0,LBB88
 1446              		stabn 192,0,0,LBB89
 1447              		stabs "this:r139=*94",64,0,151,3
 1448              		stabn 192,0,0,LBB90
 1449              		stabn 192,0,0,LBB91
 1450              		stabs "this:r140=*94",64,0,66,3
 1451              		stabn 192,0,0,LBB92
 1452              		stabn 192,0,0,LBB93
 1453              		stabn 224,0,0,LBE93
 1454              		stabn 224,0,0,LBE92
 1455              		stabn 224,0,0,LBE91
 1456              		stabn 224,0,0,LBE90
 1457              		stabn 224,0,0,LBE89
 1458              		stabn 224,0,0,LBE88
 1459              		stabn 224,0,0,LBE83
 1460              		stabn 224,0,0,LBE64
 1461              		stabn 224,0,0,LBE63
 1462              	
 1463              	Lscope6	stabs "",36,0,0,Lscope6-_handler__10PwmChanneliUi
 1464              	
 1465              		global	___vt_9PwmDriver
 1466              	
 1467              		section	.const
 1468              		stabs "__vt_9PwmDriver:G54",32,0,33,0
 1469              	___vt_9PwmDriver
 1470 000c 0000     		dc.w	0
 1471 000e 0000     		dc.w	0
 1472 0010 00D3     		dc.w	_handler__9PwmDriver
 1473 0012 0516     		dc.w	__$_9PwmDriver
 1474              	
 1475              		section	.text
 1476              	
 1477              		global	__$_9PwmDriver
 1478              	__$_9PwmDriver
 155:pwm.cc        **** 
 156:pwm.cc        **** 
 1479              		stabd 68,0,156
 1480 0516 1BF1EF   		leas	-17,s
 1481              	
 1482 0519 6C8F     		std	15,s
 1483 051b CC000C   		ldd	#___vt_9PwmDriver
 1484 051e ED8F     		ldy	15,s
 1485 0520 6C44     		std	4,y
 1486              		stabs "outputcompare.h",132,0,0,Ltext46
 1487              	
 1488              	Ltext46	stabd 68,0,43
 1489 0522 1AE813   		leax	19,y
 1490              	
 1491              	LBB94
 1492              	LBB95	stabd 68,0,44
 1493 0525 E603     		ldab	3,x
 1494 0527 51       		comb	
 1495 0528 6B8E     		stab	14,s
 1496 052a F60000   		ldab	_tmsk1
 1497 052d E48E     		andb	14,s
 1498 052f 7B0000   		stab	_tmsk1
 1499              		stabd 68,0,45
 1500 0532 E603     		ldab	3,x
 1501 0534 51       		comb	
 1502 0535 6B8D     		stab	13,s
 1503 0537 F60000   		ldab	_tios
 1504 053a E48D     		andb	13,s
 1505 053c 7B0000   		stab	_tios
 1506              		stabd 68,0,47
 1507 053f ED06     		ldy	6,x
 1508 0541 B764     		tfr	y,d
 1509 0543 AA04     		oraa	0+4,x
 1510 0545 EA05     		orab	1+4,x
 1511 0547 4151     		comd	
 1512 0549 6C82     		std	2,s
 1513 054b FD0000   		ldy	_tctl1
 1514 054e B764     		tfr	y,d
 1515 0550 A482     		anda	0+2,s
 1516 0552 E483     		andb	1+2,s
 1517 0554 7C0000   		std	_tctl1
 1518              		stabd 68,0,48
 1519 0557 E603     		ldab	3,x
 1520 0559 51       		comb	
 1521 055a 6B8C     		stab	12,s
 1522 055c F60000   		ldab	_oc7m
 1523 055f E48C     		andb	12,s
 1524 0561 7B0000   		stab	_oc7m
 1525              		stabd 68,0,49
 1526 0564 E603     		ldab	3,x
 1527 0566 51       		comb	
 1528 0567 6B8B     		stab	11,s
 1529 0569 F60000   		ldab	_oc7d
 1530 056c E48B     		andb	11,s
 1531 056e 7B0000   		stab	_oc7d
 1532              	
 1533              	LBE95	stabd 68,0,50
 1534              	
 1535              	LBE94	stabd 68,0,43
 1536 0571 ED8F     		ldy	15,s
 1537 0573 1A4B     		leax	11,y
 1538              	
 1539              	LBB96
 1540              	LBB97	stabd 68,0,44
 1541 0575 E603     		ldab	3,x
 1542 0577 51       		comb	
 1543 0578 6B8A     		stab	10,s
 1544 057a F60000   		ldab	_tmsk1
 1545 057d E48A     		andb	10,s
 1546 057f 7B0000   		stab	_tmsk1
 1547              		stabd 68,0,45
 1548 0582 E603     		ldab	3,x
 1549 0584 51       		comb	
 1550 0585 6B89     		stab	9,s
 1551 0587 F60000   		ldab	_tios
 1552 058a E489     		andb	9,s
 1553 058c 7B0000   		stab	_tios
 1554              		stabd 68,0,47
 1555 058f ED06     		ldy	6,x
 1556 0591 B764     		tfr	y,d
 1557 0593 AA04     		oraa	0+4,x
 1558 0595 EA05     		orab	1+4,x
 1559 0597 4151     		comd	
 1560 0599 6C82     		std	2,s
 1561 059b FD0000   		ldy	_tctl1
 1562 059e B764     		tfr	y,d
 1563 05a0 A482     		anda	0+2,s
 1564 05a2 E483     		andb	1+2,s
 1565 05a4 7C0000   		std	_tctl1
 1566              		stabd 68,0,48
 1567 05a7 E603     		ldab	3,x
 1568 05a9 51       		comb	
 1569 05aa 6B88     		stab	8,s
 1570 05ac F60000   		ldab	_oc7m
 1571 05af E488     		andb	8,s
 1572 05b1 7B0000   		stab	_oc7m
 1573              		stabd 68,0,49
 1574 05b4 E603     		ldab	3,x
 1575 05b6 51       		comb	
 1576 05b7 6B87     		stab	7,s
 1577 05b9 F60000   		ldab	_oc7d
 1578 05bc E487     		andb	7,s
 1579 05be 7B0000   		stab	_oc7d
 1580              	
 1581              	LBE97	stabd 68,0,50
 1582              	
 1583              	LBE96	stabs "NoCopy.h",132,0,0,Ltext47
 1584              	
  14:NoCopy.h      ****    ~NoCopy(){}
 1585              	Ltext47	stabd 68,0,14
 1586              	
 1587              	LBB98
 1588              	LBB99
 1589              	LBE99
 1590              	LBE98	stabs "pwm.cc",132,0,0,Ltext48
 1591              	
 1592              	Ltext48	stabd 68,0,156
 1593 05c1 EDF013   		ldy	19,s
 1594 05c4 6D80     		sty	0,s
 1595 05c6 EC8F     		ldd	15,s
 1596 05c8 160000   		jsr	__$_3Isr
 1597              	
 1598 05cb 1BF011   		leas	17,s
 1599 05ce 3D       		rts
 1600              	
 1601              		stabs "_$_9PwmDriver:F20",36,0,33,__$_9PwmDriver
 1602              		stabs "this:p107",160,0,33,15
 1603              		stabs "__in_chrg:p1",160,0,33,19
 1604              		stabs "this:r94",64,0,156,2
 1605              		stabn 192,0,0,LBB94
 1606              		stabn 192,0,0,LBB95
 1607              		stabn 224,0,0,LBE95
 1608              		stabn 224,0,0,LBE94
 1609              		stabs "this:r94",64,0,156,2
 1610              		stabn 192,0,0,LBB96
 1611              		stabn 192,0,0,LBB97
 1612              		stabn 224,0,0,LBE97
 1613              		stabn 224,0,0,LBE96
 1614              		stabn 192,0,0,LBB98
 1615              		stabn 192,0,0,LBB99
 1616              		stabn 224,0,0,LBE99
 1617              		stabn 224,0,0,LBE98
 1618              	
 1619              	Lscope7	stabs "",36,0,0,Lscope7-__$_9PwmDriver
 1620              	
 1621              	
 1622              		end
